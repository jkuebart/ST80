'Modified from LV4 (graphics-clocks.st) for CV4 by Evelyn Van Orden on 7 December 1983;Modified from CV4 (GraphicsClocks-CV4.st) for DV5 by Evelyn Van Orden on 30 April 1986'!MouseMenuController subclass: #ClockController	instanceVariableNames: 'clockProcess '	classVariableNames: ''	poolDictionaries: ''	category: 'Graphics-Clocks'!ClockController comment:'I am the controller for the clock view. I set up the process that updates the clock every minute.'!!ClockController methodsFor: 'initialize-release'!initialize	super initialize.	clockProcess _ 		[[(Delay forSeconds: 60) wait.		view superView display. true] whileTrue] newProcess.	clockProcess resume!release	clockProcess terminate! !!ClockController methodsFor: 'control activity'!isControlActive	^super isControlActive & sensor blueButtonPressed not! !StandardSystemView subclass: #ClockView	instanceVariableNames: 'cacheForm cacheBox myProject date '	classVariableNames: 'NumberForms '	poolDictionaries: ''	category: 'Graphics-Clocks'!ClockView comment:'I am a view of the time of day. I guarantee that my border is square.'!!ClockView methodsFor: 'initialize-release'!initialize	super initialize.	myProject _ Project current.	date _ Date today! !!ClockView methodsFor: 'displaying'!display	myProject == Project current		ifTrue:			[super display]!displayFace	(cacheBox == nil or: [cacheBox ~= self insetDisplayBox])		ifTrue:			[self reallyDisplayFace.			cacheForm _ Form fromDisplay: (cacheBox _ self insetDisplayBox)]		ifFalse:			[cacheForm displayAt: self insetDisplayBox topLeft]!displayHands	| x y radius center extent time hour minute hand |	extent _ self insetDisplayBox extent.	center _ self insetDisplayBox center.	radius _ (extent x min: extent y) // 2 - 20.	time _ Time now.	minute _ time minutes.	hour _ time hours * 5 + (minute / 12) asFloat.	hand _ Pen new.	hand defaultNib: 4.	x _ (hour * 6 - 90) degreesToRadians cos.	y _ (hour * 6 - 90) degreesToRadians sin.	hand up; goto: center + (x@y * radius // 2); down.	hand goto: center.	hand defaultNib: 2.	x _ (minute * 6 - 90) degreesToRadians cos.	y _ (minute * 6 - 90) degreesToRadians sin.	hand goto: center + (x@y * (radius-8))!displayView	| today |	today _ Date today.	date = today		ifFalse: [date _ today. self label: today printString].	super displayView.	self displayFace.	self displayHands!reallyDisplayFace	| degree radius center direction form extent |	center _ self insetDisplayBox center.	extent _ self insetDisplayBox extent.	radius _ (extent x min: extent y) // 2 - 12.	1 to: 12 do:		[:number |		degree _ number-3 * 30.		direction _ (degree degreesToRadians cos @ degree degreesToRadians sin).		form _ NumberForms at: number.		form displayAt: center+1 + (direction*radius) - (form extent // 2).		Display black: (center + (direction*(radius-11)) extent: 2@2)]! !!ClockView methodsFor: 'framing'!getFrame	"Ask the user to designate a rectangular area in which the receiver should	be displayed."	| origin minimumCorner maximumCorner frame corner newPoint |	Sensor waitNoButton.	Cursor origin		showWhile: 			[origin _ Sensor cursorPoint.			[Sensor redButtonPressed]				whileFalse: [Processor yield.							 origin _ Sensor cursorPoint]].	minimumCorner _ origin + self minimumSize.	maximumCorner _ origin + self maximumSize.	frame _ origin corner: minimumCorner.	Display fill: frame rule: Form reverse mask: Form gray.	Display fill: frame rule: Form reverse mask: Form gray.	minimumCorner = maximumCorner		ifFalse: 			[Sensor cursorPoint: minimumCorner.			Cursor corner				showWhile: 					[[Sensor redButtonPressed]						whileTrue: 							[Processor yield.							newPoint _ Sensor cursorPoint - minimumCorner.							newPoint _ newPoint max: 0@0.							newPoint _ (newPoint x max: newPoint y) @ (newPoint x max: newPoint y).							newPoint _ minimumCorner + newPoint min: maximumCorner.							frame _ origin corner: newPoint.							Display fill: frame rule: Form reverse mask: Form gray.							Display fill: frame rule: Form reverse mask: Form gray]]].	^frame! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ClockView class	instanceVariableNames: ''!!ClockView class methodsFor: 'class initialization'!initialize	"ClockView initialize"	| text |	NumberForms _ Array new: 12.	1 to: 12 do:		[:number |		text _ number printString asText.		text emphasizeFrom: 1 to: text size with: 11.		NumberForms at: number put: text asParagraph asForm]! !!ClockView class methodsFor: 'instance creation'!open	"ClockView open."	| topView insideView |	topView _ self new.	topView label: Date today printString.	topView borderWidth: 2.	topView insideColor: Form white.	topView minimumSize: 100@100.	insideView _ View new.	insideView controller: ClockController new.	topView addSubView: insideView.	topView controller open! !ClockView initialize!