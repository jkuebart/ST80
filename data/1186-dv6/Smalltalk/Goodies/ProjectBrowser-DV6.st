'From Smalltalk-80 of March 9, 1983 [V29] on 4 April 1983 at 12:02:51 pm;Modified from LV4 (projectbrowser.st) for CV4 by Evelyn Van Orden on 7 December 1983'!Object subclass: #ProjectBrowser	instanceVariableNames: 'projects currentProject '	classVariableNames: 'ProjectMenu TextMenu '	poolDictionaries: ''	category: 'Interface-Projects'!!ProjectBrowser methodsFor: 'initialize'!initialize	projects _ Project allInstances! !!ProjectBrowser methodsFor: 'list access'!currentProject	^currentProject!currentProject: aProject	currentProject _ aProject.	self changed: #text!projectList	^projects!projectMenu 	currentProject isNil 		ifTrue: [ProjectMenu _ ActionMenu	 		labels: 'add project' lines: #() selectors: #(addProject)]		ifFalse:	 		[ProjectMenu _ ActionMenu	 			labels: 'enter\add project\remove project' withCRs				lines: #(1 3)				selectors: #(enterProject addProject removeProject)].	^ProjectMenu! !!ProjectBrowser methodsFor: 'list functions'!addProject	| aProject aString|		aString _ FillInTheBlank 				request:  'Title for Project?' 				initialAnswer: 'a Project'.	aString isEmpty ifTrue: [^self].	aProject _ Project new title: aString.	projects add: aProject.	currentProject _ aProject.	self changed: #currentProject!enterProject	currentProject notNil		ifTrue: [currentProject enter]!removeProject	currentProject isNil ifTrue: [^self].	"if the current project is the one running, do not remove it"	currentProject == Project current 	 	ifTrue: [^self error: 	 	 'You can not remove the project in which you are running'].	currentProject release.	projects remove: currentProject ifAbsent: [].	currentProject _ nil.	self changed: #currentProject! !!ProjectBrowser methodsFor: 'text access'!acceptText: aText from: whoCares	currentProject contents: aText string.	^true!text	currentProject isNil		ifTrue: [^'' asText]		ifFalse: [^currentProject contents asText]!textMenu 	currentProject isNil ifTrue: [^nil].	TextMenu == nil ifTrue:	 [TextMenu _ ActionMenu	   labels: 'again\undo\copy\cut\paste\accept\cancel' withCRs	   lines: #(2 5 )	  selectors: 		#(again undo copySelection cut paste accept cancel)].	^TextMenu! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ProjectBrowser class	instanceVariableNames: ''!!ProjectBrowser class methodsFor: 'instance creation'!open			"ProjectBrowser open"	"Create and schedule a Project Browser."	| topView aBrowser |	aBrowser _ self new initialize.	topView _ 		StandardSystemView 				model: aBrowser 				label: 'Project Browser' 				minimumSize: 200 @ 200.	topView addSubView:			(SelectionInListView on: aBrowser printItems: true oneItem: false aspect: #currentProject change: #currentProject: list: #projectList menu: #projectMenu initialSelection: nil)		in: (0@0.0 extent: 1@0.4) borderWidth: 1.	topView addSubView:			(CodeView on: aBrowser aspect: #text change: #acceptText:from: menu: #textMenu initialSelection: nil)		in: (0.0@0.4 extent: 1@0.6) borderWidth: 1.	topView controller open! !StringHolder subclass: #Project	instanceVariableNames: 'projectWindows projectChangeSet projectTranscript projectHolder title '	classVariableNames: 'CurrentProject '	poolDictionaries: ''	category: 'Interface-Projects'!!Project methodsFor: 'initialize-release'!title: aString	title _ aString! !!Project methodsFor: 'printing'!printOn: aStream	aStream nextPutAll: title! !!Project class methodsFor: 'instance creation'!new	| project |	project _ super new setProjectHolder: CurrentProject.	project title: 'no title'.	^project! !Project allInstances do: [:each | each title: 'no title']!